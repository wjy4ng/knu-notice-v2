name: Periodic Crawling

on:
  schedule:
    # 매시간 0분에 실행 (UTC 기준)
    - cron: '0 * * * *'
  workflow_dispatch: # 수동 실행 가능

jobs:
  crawl:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv sync
        
    - name: Install Chrome
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Setup database and run crawling
      env:
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DEBUG: "False"
        GITHUB_ACTIONS: "true"
      run: |
        # SQLite 데이터베이스 파일 생성 및 마이그레이션
        echo "Creating SQLite database..."
        rm -f db.sqlite3
        uv run python manage.py migrate --verbosity=2
        
        # 데이터베이스 테이블 확인
        echo "Checking database tables..."
        uv run python -c "
        import sqlite3
        conn = sqlite3.connect('db.sqlite3')
        cursor = conn.cursor()
        cursor.execute(\"SELECT name FROM sqlite_master WHERE type='table';\")
        tables = cursor.fetchall()
        print('Available tables:', [table[0] for table in tables])
        conn.close()
        "
        
        # 크롤링 실행
        echo "Starting crawling..."
        uv run python manage.py crawl_notices
        
        # 크롤링된 데이터를 JSON으로 내보내기
        echo "Exporting data to JSON..."
        uv run python manage.py export_data
        
    - name: Send data to Render.com
      env:
        RENDER_APP_URL: ${{ secrets.RENDER_APP_URL }}
        CRAWL_AUTH_TOKEN: ${{ secrets.CRAWL_AUTH_TOKEN }}
      run: |
        # JSON 파일을 Render.com으로 전송
        if [ -f "crawled_data.json" ]; then
          curl -X POST "${RENDER_APP_URL}/api/import-data/" \
            -H "Authorization: Bearer ${CRAWL_AUTH_TOKEN}" \
            -H "Content-Type: application/json" \
            -d @crawled_data.json
        fi
